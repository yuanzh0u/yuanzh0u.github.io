<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yuanzh0u.github.io</id>
    <title>yuanZh0u</title>
    <updated>2020-02-20T07:34:22.569Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yuanzh0u.github.io"/>
    <link rel="self" href="https://yuanzh0u.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://yuanzh0u.github.io/images/avatar.png</logo>
    <icon>https://yuanzh0u.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, yuanZh0u</rights>
    <entry>
        <title type="html"><![CDATA[Tutorial List for Beginners]]></title>
        <id>https://yuanzh0u.github.io/post/tutorial-list-for-beginners/</id>
        <link href="https://yuanzh0u.github.io/post/tutorial-list-for-beginners/">
        </link>
        <updated>2020-02-20T02:37:21.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>学会一门编程语言之   <a href="https://www.bilibili.com/video/av46230772?from=search&amp;seid=11943480974581181"><code>Javascript基础</code> </a></li>
<li>了解数据结构是什么   <a href="https://www.bilibili.com/video/av82049466?from=search&amp;seid=11943480974581181"><code>数据结构与算法入门</code></a></li>
<li>语言的应用进阶篇<a href="https://www.bilibili.com/video/av87391436?from=search&amp;seid=11943480974581181"><code>Python与网络APP及机器学习APP</code></a></li>
<li>数据库是干什么的<a href="https://www.bilibili.com/video/av47123168?from=search&amp;seid=11943480974581181"><code>初探SQL</code></a></li>
<li>学习用Node.js进行一次完整的网络APP开发<a href="https://www.bilibili.com/video/av38914382?from=search&amp;seid=11943480974581181"><code>Node.js全教程</code></a></li>
<li>WebGL三维建模基础库Three.js<a href="https://threejsfundamentals.org/threejs/lessons/threejs-fundamentals.html"><code>Three.js Fundamentals</code></a></li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Day#1 electron_vue installation]]></title>
        <id>https://yuanzh0u.github.io/post/day1-electron_vue-installation/</id>
        <link href="https://yuanzh0u.github.io/post/day1-electron_vue-installation/">
        </link>
        <updated>2020-02-19T13:50:34.000Z</updated>
        <content type="html"><![CDATA[<h2 id="install-nodejs">install node.js</h2>
<p>Go to the Node.js <a href="https://nodejs.org/en/download/">download</a> page. Download and Install the Current(Latest Features) 13.6.0 with npm (v.6.13.4). During the installation, select options such as <code>Node.js runtime</code>, <code>npm package manager</code>, <code>Add to PATH</code></p>
<h2 id="install-vue-cli-3">install vue cli 3</h2>
<p>Install vue cli 3 with a terminal console. cd to the root folder of the project and type the command...</p>
<pre><code class="language-terminal">npm install -g @vue/cli
</code></pre>
<p>By which will install the source files of vue to the system, and ect.</p>
<h2 id="create-a-new-project">create a new project</h2>
<p>To create a new project underthe root folder of the project, type the command in a terminal console...</p>
<pre><code class="language-terminal">vue create [project name]
</code></pre>
<p>and select the following options when asking...</p>
<pre><code class="language-terminal">? Please pick a preset: {Manually select features}
? Check the features needed for your project: {Babel, Router, Vuex, Linter}
? Use history mode for router? (Requires proper server setup for index fallback in production) {Yes}
? Pick a linter / formatter config: {Basic}
? Pick additional lint features: (Press &lt;space&gt; to select, &lt;a&gt; to toggle all, &lt;i&gt; to invert selection {Lint on save}
? Where do you prefer placing config for Babel, ESLint, etc.? { In dedicated config files}
? Save this as a preset for future projects? {No}
</code></pre>
<h2 id="install-electron-support">Install electron support</h2>
<p>CD to the project folder in the terminal console, and type the command...</p>
<pre><code class="language-terminal">vue add electron-builder
</code></pre>
<p>When asking the version of electron to install, select the newest one.<br>
After the vue-cli-plugin-electron-builder is successfully installed, you could type <code>npm run electron:serve</code> to render the electron app in dev-mode, and type <code>npm run electron:build</code> to build and publish the electron app.</p>
]]></content>
    </entry>
</feed>